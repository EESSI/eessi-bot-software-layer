# Also see documentation at https://github.com/EESSI/eessi-bot-software-layer/blob/main/README.md#step5.5
[github]
# replace '199740' with the ID of your GitHub App
app_id = 199740
# a short (!) name for your app instance that can be used for example
#   when adding/updating a comment to a PR
# (!) a short yet descriptive name is preferred because it appears in
#   comments to the PR
# for example, the name could include the name of the cluster the bot
#   runs on and the username which runs the bot
app_name = "MY-bot"
# replace '25669742' with the ID of the installation of your GitHub App
#   (can be derived by creating an event and then checking for the list
#   of sent events and its payload either via the Smee channel's web page
#   or via the Advanced section of your GitHub App on github.com)
installation_id = 25669742
# path to the private key that was generated when the GitHub App was registered
private_key = PATH_TO_PRIVATE_KEY

[buildenv]
# directory under which the bot prepares directories per job
#   structure created is as follows: YYYY.MM/pr_PR_NUMBER/event_EVENT_ID/run_RUN_NUMBER/OS+SUBDIR
jobs_base_dir = $HOME/jobs
# PATH to temporary directory on build node ... ends up being used for
#   EESSI_TMPDIR --> /tmp/$USER/EESSI
local_tmp = /tmp/$USER/EESSI
# name of the job script used for building an EESSI stack
build_job_script = PATH_TO_EESSI_BOT/scripts/eessi-bot-build.slurm
# full path to the job submission command
submit_command = /usr/bin/sbatch
# parameters to be added to all job submissions
slurm_params = "--hold"

[architecturetargets]
# defines both for which architectures the bot will build
#   and what submission parameters shall be used
arch_target_map = { "linux/x86_64/generic" : "--constraint shape=c4.2xlarge", "linux/x86_64/amd/zen2": "--constraint shape=c5a.2xlarge" }

[job_manager]
# directory where job manager stores information about jobs to be tracked
#   e.g. as symbolic link JOBID -> directory to job
job_ids_dir = $HOME/jobs/ids
# full path to the job status checking command
poll_command = /usr/bin/squeue
# polling interval in seconds
poll_interval = 60
# full path to the command for manipulating existing jobs
scontrol_command = /usr/bin/scontrol
